package edu.kh.project.board.model.service;

import java.util.ArrayList;
import java.util.List;

import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;
import org.springframework.web.multipart.MultipartFile;

import edu.kh.project.board.model.dto.Board;
import edu.kh.project.board.model.dto.BoardImg;
import edu.kh.project.board.model.mapper.EditBoardMapper;
import lombok.RequiredArgsConstructor;

@Service
@Transactional(rollbackFor = Exception.class)
@RequiredArgsConstructor
public class EditBoardServiceImpl implements EditBoardService{

	private final EditBoardMapper mapper;

	
	// 게시글 작성
	@Override
	public int boardInsert(Board inputBoard, List<MultipartFile> images) throws Exception {
		
		// 1. 게시글 부분 (insertBoard)을 먼저
		//    BOARD 테이블 INSERT 하기
		// -> INSERT 결과로 작성된 게시글 번호(시퀀스 번호) 반환 받기
		int result = mapper.boardInsert(inputBoard);
		
		// result == INSERT 결과 (삽입 성공한 행의 개수 0 or 1)
		
		// 삽입 실패 시
		if(result == 0) return 0;
		
		// 삽입 성공 시
		// 삽입된 게시글의 번호를 변수로 저장
		// -> mapper.xml에서 <selectKey> 태그를 이용해서 생성된
		//    boardNo가 inputBoard에 저장된 상태!!! (얕은 복사 개념 이해 필수)
		int boardNo = inputBoard.getBoardNo();
		
		
		// 2. 업로드된 이미지가 실제로 존재할 경우
		//    업로드된 이미지만 별도로 저장하여
		//    BOARD_IMG 테이블에 삽입하는 코드 작성
		
		// 실제 업로드된 이미지의 정보를 모아둘 List 생성
		List<BoardImg> uploadList = new ArrayList<>();
		
		
		return 0;
	}
	
}
