<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="edu.kh.project.board.model.mapper.BoardMapper">

	<!--
		resultMap 태그
		
		- 1) 조회된 컬럼명과 DTO의 필드명이 일치하지 않을 때 매핑(연결) 시켜주는 역할
		
		- 2) <collection> 태그를 추가 작성하여
		     여러 행 결과가 조회되는 다른 SELECT를 수행한 후
		     그 결과를 지정된 DTO의 필드에 대입 
	-->
	<resultMap type="Board" id="board_rm">
	</resultMap>


	<select id="selectBoardTypeList">
		SELECT 
			BOARD_CODE "boardCode", 
			BOARD_NAME "boardName"
		FROM "BOARD_TYPE"
		ORDER BY BOARD_CODE
	</select>


	<!-- 게시글 수 조회 -->
	<select id="getListCount">
		SELECT
			COUNT(*)
		FROM "BOARD"
		WHERE BOARD_DEL_FL = 'N'
		AND BOARD_CODE = #{boardCode}
	</select>
	
	
	<!-- 
		<![CDATA["문자열"]]> 
		
		해당 태그 내부에 작성된 문자열은 특수 기호로 해석하지 말고
		문자 그대로 인식하라는 태그 (순수 문자 데이터임을 지정)
	
	-->
	
	<!-- 특정 게시판의 지정된 페이지 목록 조회 -->
	<select id="selectBoardList">
		SELECT 
			BOARD_NO, 
			BOARD_TITLE, 
			MEMBER_NICKNAME, 
			READ_COUNT,
			
			(SELECT COUNT(*)
			 FROM "COMMENT" COM
			 WHERE COM.BOARD_NO = BOA.BOARD_NO) COMMENT_COUNT,
			 
			(SELECT COUNT(*)
			 FROM "BOARD_LIKE" BOALK
			 WHERE BOALK.BOARD_NO = BOA.BOARD_NO) LIKE_COUNT,
			 
			 <![CDATA[
				 CASE 
					 WHEN SYSDATE - BOARD_WRITE_DATE < 1 / 24 / 60
					 THEN FLOOR( (SYSDATE - BOARD_WRITE_DATE) * 24 * 60 * 60 ) || '초 전'
					 
					 WHEN SYSDATE - BOARD_WRITE_DATE < 1 / 24
					 THEN FLOOR( (SYSDATE - BOARD_WRITE_DATE) * 24 * 60) || '분 전'
					 
					 WHEN SYSDATE - BOARD_WRITE_DATE < 1
					 THEN FLOOR( (SYSDATE - BOARD_WRITE_DATE) * 24 ) || '시간 전'
					 
					 ELSE TO_CHAR(BOARD_WRITE_DATE, 'YYYY-MM-DD')
				 END BOARD_WRITE_DATE
			 ]]>
			 
		FROM "BOARD" BOA
		JOIN "MEMBER" USING(MEMBER_NO)
		WHERE BOARD_DEL_FL = 'N'
		AND BOARD_CODE = #{boardCode}
		ORDER BY BOARD_NO DESC
	</select>
	
	
	<!-- 게시글 상세조회 -->
	<select id="selectOne" resultMap="board_rm">
		SELECT 
			BOARD_NO, 
			BOARD_TITLE, 
			BOARD_CONTENT, 
			BOARD_CODE, 
			READ_COUNT,
			MEMBER_NO, 
			MEMBER_NICKNAME, 
			PROFILE_IMG,
			TO_CHAR(BOARD_WRITE_DATE, 'YYYY"년" MM"월" DD"일" HH24:MI:SS') BOARD_WRITE_DATE, 
			TO_CHAR(BOARD_UPDATE_DATE, 'YYYY"년" MM"월" DD"일" HH24:MI:SS') BOARD_UPDATE_DATE, 
		
			( 
				SELECT COUNT(*) 
				FROM "BOARD_LIKE"
				WHERE BOARD_NO = #{boardNo}
			) LIKE_COUNT,
		
			( 
				SELECT IMG_PATH || IMG_RENAME 
				FROM "BOARD_IMG"
				WHERE BOARD_NO = #{boardNo}
				AND IMG_ORDER = 0 
			) THUMBNAIL,
			
			(
				SELECT COUNT(*)
				FROM "BOARD_LIKE"
				WHERE BOARD_NO = #{boardNo}
			) LIKE_CHECK
		
		FROM "BOARD"
		JOIN "MEMBER" USING(MEMBER_NO)
		WHERE BOARD_DEL_FL = 'N'
		AND BOARD_CODE = #{boardCode}
		AND BOARD_NO = #{boardNo}
	</select>


	<!-- 상세 조회한 게시글의 이미지 목록 조회 -->
	<select id="selectImageList" resultType="BoardImg">
		SELECT COUNT(*)
		FROM "BOARD_IMG"
		WHERE BOARD_NO = #{boardNo}
		ORDER BY IMG_ORDER
	</select>
	
	
	<!-- 상세 조회한 게시글의 댓글 목록 조회 -->
	<select id="selectCommentList" resultType="Comment">
		SELECT LEVEL, C.* FROM
			(SELECT
					COMMENT_NO, 
					COMMENT_CONTENT,
				  TO_CHAR(COMMENT_WRITE_DATE, 'YYYY"년" MM"월" DD"일" HH24"시" MI"분" SS"초"') COMMENT_WRITE_DATE,
				  BOARD_NO,
				  MEMBER_NO,
				  MEMBER_NICKNAME,
				  PROFILE_IMG,
				  PARENT_COMMENT_NO,
				  COMMENT_DEL_FL
			FROM "COMMENT"
			JOIN MEMBER USING(MEMBER_NO)
			WHERE BOARD_NO = #{boardNo}	) C
		WHERE COMMENT_DEL_FL = 'N'
		OR 0 != (SELECT 
								COUNT(*) 
						FROM "COMMENT" SUB
						WHERE SUB.PARENT_COMMENT_NO = C.COMMENT_NO
						AND COMMENT_DEL_FL = 'N')
		START WITH PARENT_COMMENT_NO IS NULL
		CONNECT BY PRIOR COMMENT_NO = PARENT_COMMENT_NO
		ORDER SIBLINGS BY COMMENT_NO
	</select>
	
	
	
	
</mapper>
